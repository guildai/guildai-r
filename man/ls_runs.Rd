% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runs.R
\name{ls_runs}
\alias{ls_runs}
\title{list guild runs}
\usage{
ls_runs(runs = NULL, ...)
}
\arguments{
\item{runs}{a runs specification.}

\item{...}{additional arguments passed to \verb{guild api runs}. Try
\code{"--help"} to see options.}
}
\value{
a dataframe of runs
}
\description{
list guild runs
}
\examples{
\dontrun{
if(FALSE) {
withr::with_package("dplyr", {

ls_runs() # get the full set of runs
ls_runs(1) # get the most recent run
ls_runs(1:3) # get the last 3 runs

# some other examples for passing filter expressions
ls_runs(staged = TRUE) # list only staged runs
ls_runs(tag = c("convnet", "keras"), started = "last hour")
ls_runs(error = TRUE)

#'
runs <- ls_runs()

# filter down the runs list to ones of interest
runs <- runs \%>\%
  filter(exit_status == 0) \%>\% # run ended without an error code
  filter(scalars$test_accuracy > .8) \%>\%
  filter(flags$epochs > 10) \%>\%
  arrange(scalars$test_loss) \%>\%
  select(id, flags, scalars)

# retrieve full scalars history from the runs of interest
runs$id \%>\%
  ls_scalars()

# export the best run
runs \%>\%
  slice_max(scalars$test_accuracy) \%>\%
  runs_tag("best") \%>\%
  runs_export("./my-best-runs")

}
})
}
}
